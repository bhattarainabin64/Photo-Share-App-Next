name: Build and deploy Node.js app to Azure Web App - PhotoShareNext

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Clean deployment directory
        run: rm -rf deploy && mkdir -p deploy

      - name: Create server.js file
        run: |
          cat > server.js << EOL
          const { createServer } = require('http');
          const { parse } = require('url');
          const next = require('next');
          
          const dev = process.env.NODE_ENV !== 'production';
          const app = next({ dev });
          const handle = app.getRequestHandler();
          const port = process.env.PORT || 3000;
          
          app.prepare().then(() => {
            createServer((req, res) => {
              const parsedUrl = parse(req.url, true);
              handle(req, res, parsedUrl);
            }).listen(port, (err) => {
              if (err) throw err;
              console.log(\`> Ready on http://localhost:\${port}\`);
            });
          });
          EOL

      - name: Copy Next.js output to deployment directory
        run: |
          cp -r .next deploy/
          cp -r public deploy/ || true
          cp package.json deploy/
          cp next.config.mjs deploy/ || true
          cp server.js deploy/

      - name: Create deployment marker
        run: echo "Deployed at $(date)" > deploy/deploy-timestamp.txt

      - name: Zip deployment package
        run: |
          cd deploy
          zip -r ../release.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact
        run: unzip release.zip

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'PhotoShareNext'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .

      - name: Restart web app
        uses: azure/cli@v1.0.7
        with:
          inlineScript: |
            az webapp restart --name PhotoShareNext --resource-group DefaultResourceGroup-CCAN
        continue-on-error: true